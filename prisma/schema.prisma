generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String            @id @db.Uuid
  name            String?           @db.VarChar
  email           String?           @db.VarChar
  username        String?           @db.VarChar
  password        String?           @db.VarChar
  address         String?
  previlage       String?           @db.VarChar
  active          Boolean?
  image_url       String?           @db.VarChar
  created_at      DateTime?         @db.Timestamp(6)
  updated_at      DateTime?         @db.Timestamp(6)
  contact_teacher contact_teacher[]
  group_users     group_users[]
  materi          materi[]
  message         message[]
  take_materi     take_materi[]
}

model group {
  id          String        @id @db.Uuid
  name        String?       @db.VarChar
  created_at  DateTime?     @db.Timestamp(6)
  updated_at  DateTime?     @db.Timestamp(6)
  group_users group_users[]
  message     message[]
}

model group_users {
  id         String    @id @db.Uuid
  group_id   String?   @db.Uuid
  user_id    String?   @db.Uuid
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  group      group?    @relation(fields: [group_id], references: [id])
  users      users?    @relation(fields: [user_id], references: [id])
}

model materi {
  id                String              @id @db.Uuid
  author_id         String?             @db.Uuid
  title             String?
  description       String?
  thumbnail         String?             @db.VarChar
  url               String?             @db.VarChar
  type              Int?
  view              Int?
  like              Int?
  created_at        DateTime?           @db.Timestamp(6)
  updated_at        DateTime?           @db.Timestamp(6)
  file              String?
  users             users?              @relation(fields: [author_id], references: [id])
  take_materi_items take_materi_items[]
}

model message {
  id         String    @id @db.Uuid
  group_id   String?   @db.Uuid
  user_id    String?   @db.Uuid
  message    String?
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  group      group?    @relation(fields: [group_id], references: [id])
  users      users?    @relation(fields: [user_id], references: [id])
}

model quiz_question {
  id                String    @id @db.Uuid
  question          String?
  correct_answer    String?   @db.VarChar
  incorrect_answers String?   @db.VarChar
  created_at        DateTime? @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)
}

model take_materi {
  id                String              @id @db.Uuid
  student_id        String?             @db.Uuid
  created_at        DateTime?           @db.Timestamp(6)
  updated_at        DateTime?           @db.Timestamp(6)
  users             users?              @relation(fields: [student_id], references: [id])
  take_materi_items take_materi_items[]
}

model take_materi_items {
  id             String       @id @db.Uuid
  take_materi_id String?      @db.Uuid
  materi_id      String?      @db.Uuid
  created_at     DateTime?    @db.Timestamp(6)
  updated_at     DateTime?    @db.Timestamp(6)
  materi         materi?      @relation(fields: [materi_id], references: [id])
  take_materi    take_materi? @relation(fields: [take_materi_id], references: [id])
}

model contact_teacher {
  id        String  @id @db.Uuid
  author_id String? @db.Uuid
  name      String? @db.VarChar
  email     String? @db.VarChar
  phone     String? @db.VarChar
  address   String?
  image_url String?
  job_desc  String?
  edu_title String? @db.VarChar
  users     users?  @relation(fields: [author_id], references: [id])
}
